# GitHub Actions Workflow for Issue Comment Automation (No PR Creation)
# This workflow responds to new issues by providing detailed analysis via comments
# without requiring PR creation permissions

name: Issue Analysis Comment Automation

on:
  issues:
    types: [opened, reopened, labeled]
  issue_comment:
    types: [created]

# Minimal permissions - only what's needed for issue comments
permissions:
  issues: write          # Required to create comments
  contents: read         # Required to checkout repository
  metadata: read         # Required to read repository metadata

jobs:
  analyze-issue:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'reopened')) ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/analyze'))
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          npm ci
          # Install only required packages for issue automation
          npm install @octokit/rest
        
      - name: Debug Environment
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Issue Number: ${{ github.event.issue.number }}"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Repository: ${{ github.repository }}"
          echo "Node Version: $(node --version)"
          echo "NPM Version: $(npm --version)"
          
      - name: Run Issue Analysis (Comment Only)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          REPOSITORY: ${{ github.repository }}
        run: |
          echo "üöÄ Starting Issue Analysis (Comment-Only Mode)"
          echo "üìã Issue #$ISSUE_NUMBER: $ISSUE_TITLE"
          
          # Run the comment-only automation script
          node scripts/claude-flow-issue-comment-automation.js \
            --issue-number "$ISSUE_NUMBER" \
            --issue-title "$ISSUE_TITLE" \
            --issue-body "$ISSUE_BODY" \
            --repository "$REPOSITORY"
            
      - name: Handle Analysis Failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          echo "‚ùå Analysis failed, posting error comment"
          
          # Create a simple error comment using GitHub CLI
          gh issue comment $ISSUE_NUMBER --body "‚ùå **Automated Analysis Failed**

          The automated issue analysis system encountered an error and could not complete the analysis.
          
          **Next Steps:**
          1. A developer should manually review this issue
          2. Check the GitHub Actions logs for error details
          3. Consider fixing the automation system for future issues
          
          **Manual Analysis Required** ‚ö†Ô∏è
          
          ---
          ü§ñ Generated by GitHub Actions Error Handler"

  # Separate job for manual trigger via comment commands
  manual-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '/reanalyze')
    
    steps:
      - name: Acknowledge Manual Trigger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          gh issue comment $ISSUE_NUMBER --body "üîÑ **Manual Re-Analysis Triggered**
          
          Initiating fresh analysis of this issue...
          
          ‚è≥ Please wait while the system processes your request."
          
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci && npm install @octokit/rest
        
      - name: Run Manual Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          REPOSITORY: ${{ github.repository }}
        run: |
          echo "üîÑ Manual re-analysis triggered"
          node scripts/claude-flow-issue-comment-automation.js \
            --issue-number "$ISSUE_NUMBER" \
            --issue-title "$ISSUE_TITLE" \
            --issue-body "$ISSUE_BODY" \
            --repository "$REPOSITORY"

  # Health check job to verify automation system status
  health-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '/health-check')
    
    steps:
      - name: System Health Check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          echo "üè• Running automation system health check"
          
          # Check system components
          HEALTH_STATUS="‚úÖ **Automation System Health Check**\n\n"
          HEALTH_STATUS+="**System Components:**\n"
          HEALTH_STATUS+="- GitHub Actions Runtime: ‚úÖ Operational\n"
          HEALTH_STATUS+="- Node.js Environment: ‚úÖ $(node --version)\n"
          HEALTH_STATUS+="- NPM Package Manager: ‚úÖ $(npm --version)\n"
          HEALTH_STATUS+="- GitHub API Access: ‚úÖ Connected\n"
          HEALTH_STATUS+="- Issue Comment Permissions: ‚úÖ Available\n\n"
          HEALTH_STATUS+="**Automation Capabilities:**\n"
          HEALTH_STATUS+="- Issue Analysis: ‚úÖ Available\n"
          HEALTH_STATUS+="- Comment Generation: ‚úÖ Available\n"
          HEALTH_STATUS+="- Claude Flow Integration: ‚ö†Ô∏è Limited (Initialization Issues)\n"
          HEALTH_STATUS+="- Pull Request Creation: ‚ùå Disabled (Permission Restrictions)\n\n"
          HEALTH_STATUS+="**Commands Available:**\n"
          HEALTH_STATUS+="- \`/analyze\` - Request issue analysis\n"
          HEALTH_STATUS+="- \`/reanalyze\` - Trigger fresh analysis\n"
          HEALTH_STATUS+="- \`/health-check\` - Check system status\n\n"
          HEALTH_STATUS+="---\n"
          HEALTH_STATUS+="ü§ñ System Status: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          
          gh issue comment $ISSUE_NUMBER --body "$HEALTH_STATUS"